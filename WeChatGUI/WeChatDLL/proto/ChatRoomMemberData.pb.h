// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatRoomMemberData.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ChatRoomMemberData_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ChatRoomMemberData_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021009 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "ChatRoomMemberInfo.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ChatRoomMemberData_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ChatRoomMemberData_2eproto {
  static const uint32_t offsets[];
};
class ChatRoomMemberData;
struct ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ChatRoomMemberData* Arena::CreateMaybeMessage<::ChatRoomMemberData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ChatRoomMemberData final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:ChatRoomMemberData) */ {
 public:
  inline ChatRoomMemberData() : ChatRoomMemberData(nullptr) {}
  ~ChatRoomMemberData() override;
  explicit PROTOBUF_CONSTEXPR ChatRoomMemberData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ChatRoomMemberData(const ChatRoomMemberData& from);
  ChatRoomMemberData(ChatRoomMemberData&& from) noexcept
    : ChatRoomMemberData() {
    *this = ::std::move(from);
  }

  inline ChatRoomMemberData& operator=(const ChatRoomMemberData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatRoomMemberData& operator=(ChatRoomMemberData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ChatRoomMemberData& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChatRoomMemberData* internal_default_instance() {
    return reinterpret_cast<const ChatRoomMemberData*>(
               &_ChatRoomMemberData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ChatRoomMemberData& a, ChatRoomMemberData& b) {
    a.Swap(&b);
  }
  inline void Swap(ChatRoomMemberData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatRoomMemberData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChatRoomMemberData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChatRoomMemberData>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const ChatRoomMemberData& from);
  void MergeFrom(const ChatRoomMemberData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChatRoomMemberData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ChatRoomMemberData";
  }
  protected:
  explicit ChatRoomMemberData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemberListFieldNumber = 2,
    kField4FieldNumber = 4,
    kMemberCountFieldNumber = 1,
    kInfoMaskFieldNumber = 3,
    kField5FieldNumber = 5,
    kField7FieldNumber = 7,
  };
  // repeated .ChatRoomMemberInfo memberList = 2;
  int memberlist_size() const;
  private:
  int _internal_memberlist_size() const;
  public:
  void clear_memberlist();
  ::ChatRoomMemberInfo* mutable_memberlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ChatRoomMemberInfo >*
      mutable_memberlist();
  private:
  const ::ChatRoomMemberInfo& _internal_memberlist(int index) const;
  ::ChatRoomMemberInfo* _internal_add_memberlist();
  public:
  const ::ChatRoomMemberInfo& memberlist(int index) const;
  ::ChatRoomMemberInfo* add_memberlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ChatRoomMemberInfo >&
      memberlist() const;

  // string field_4 = 4;
  void clear_field_4();
  const std::string& field_4() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_field_4(ArgT0&& arg0, ArgT... args);
  std::string* mutable_field_4();
  PROTOBUF_NODISCARD std::string* release_field_4();
  void set_allocated_field_4(std::string* field_4);
  private:
  const std::string& _internal_field_4() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field_4(const std::string& value);
  std::string* _internal_mutable_field_4();
  public:

  // int32 memberCount = 1;
  void clear_membercount();
  int32_t membercount() const;
  void set_membercount(int32_t value);
  private:
  int32_t _internal_membercount() const;
  void _internal_set_membercount(int32_t value);
  public:

  // int32 InfoMask = 3;
  void clear_infomask();
  int32_t infomask() const;
  void set_infomask(int32_t value);
  private:
  int32_t _internal_infomask() const;
  void _internal_set_infomask(int32_t value);
  public:

  // int32 field_5 = 5;
  void clear_field_5();
  int32_t field_5() const;
  void set_field_5(int32_t value);
  private:
  int32_t _internal_field_5() const;
  void _internal_set_field_5(int32_t value);
  public:

  // int32 field_7 = 7;
  void clear_field_7();
  int32_t field_7() const;
  void set_field_7(int32_t value);
  private:
  int32_t _internal_field_7() const;
  void _internal_set_field_7(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ChatRoomMemberData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ChatRoomMemberInfo > memberlist_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field_4_;
    int32_t membercount_;
    int32_t infomask_;
    int32_t field_5_;
    int32_t field_7_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ChatRoomMemberData_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChatRoomMemberData

// int32 memberCount = 1;
inline void ChatRoomMemberData::clear_membercount() {
  _impl_.membercount_ = 0;
}
inline int32_t ChatRoomMemberData::_internal_membercount() const {
  return _impl_.membercount_;
}
inline int32_t ChatRoomMemberData::membercount() const {
  // @@protoc_insertion_point(field_get:ChatRoomMemberData.memberCount)
  return _internal_membercount();
}
inline void ChatRoomMemberData::_internal_set_membercount(int32_t value) {
  
  _impl_.membercount_ = value;
}
inline void ChatRoomMemberData::set_membercount(int32_t value) {
  _internal_set_membercount(value);
  // @@protoc_insertion_point(field_set:ChatRoomMemberData.memberCount)
}

// repeated .ChatRoomMemberInfo memberList = 2;
inline int ChatRoomMemberData::_internal_memberlist_size() const {
  return _impl_.memberlist_.size();
}
inline int ChatRoomMemberData::memberlist_size() const {
  return _internal_memberlist_size();
}
inline ::ChatRoomMemberInfo* ChatRoomMemberData::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:ChatRoomMemberData.memberList)
  return _impl_.memberlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ChatRoomMemberInfo >*
ChatRoomMemberData::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:ChatRoomMemberData.memberList)
  return &_impl_.memberlist_;
}
inline const ::ChatRoomMemberInfo& ChatRoomMemberData::_internal_memberlist(int index) const {
  return _impl_.memberlist_.Get(index);
}
inline const ::ChatRoomMemberInfo& ChatRoomMemberData::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:ChatRoomMemberData.memberList)
  return _internal_memberlist(index);
}
inline ::ChatRoomMemberInfo* ChatRoomMemberData::_internal_add_memberlist() {
  return _impl_.memberlist_.Add();
}
inline ::ChatRoomMemberInfo* ChatRoomMemberData::add_memberlist() {
  ::ChatRoomMemberInfo* _add = _internal_add_memberlist();
  // @@protoc_insertion_point(field_add:ChatRoomMemberData.memberList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ChatRoomMemberInfo >&
ChatRoomMemberData::memberlist() const {
  // @@protoc_insertion_point(field_list:ChatRoomMemberData.memberList)
  return _impl_.memberlist_;
}

// int32 InfoMask = 3;
inline void ChatRoomMemberData::clear_infomask() {
  _impl_.infomask_ = 0;
}
inline int32_t ChatRoomMemberData::_internal_infomask() const {
  return _impl_.infomask_;
}
inline int32_t ChatRoomMemberData::infomask() const {
  // @@protoc_insertion_point(field_get:ChatRoomMemberData.InfoMask)
  return _internal_infomask();
}
inline void ChatRoomMemberData::_internal_set_infomask(int32_t value) {
  
  _impl_.infomask_ = value;
}
inline void ChatRoomMemberData::set_infomask(int32_t value) {
  _internal_set_infomask(value);
  // @@protoc_insertion_point(field_set:ChatRoomMemberData.InfoMask)
}

// string field_4 = 4;
inline void ChatRoomMemberData::clear_field_4() {
  _impl_.field_4_.ClearToEmpty();
}
inline const std::string& ChatRoomMemberData::field_4() const {
  // @@protoc_insertion_point(field_get:ChatRoomMemberData.field_4)
  return _internal_field_4();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ChatRoomMemberData::set_field_4(ArgT0&& arg0, ArgT... args) {
 
 _impl_.field_4_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ChatRoomMemberData.field_4)
}
inline std::string* ChatRoomMemberData::mutable_field_4() {
  std::string* _s = _internal_mutable_field_4();
  // @@protoc_insertion_point(field_mutable:ChatRoomMemberData.field_4)
  return _s;
}
inline const std::string& ChatRoomMemberData::_internal_field_4() const {
  return _impl_.field_4_.Get();
}
inline void ChatRoomMemberData::_internal_set_field_4(const std::string& value) {
  
  _impl_.field_4_.Set(value, GetArenaForAllocation());
}
inline std::string* ChatRoomMemberData::_internal_mutable_field_4() {
  
  return _impl_.field_4_.Mutable(GetArenaForAllocation());
}
inline std::string* ChatRoomMemberData::release_field_4() {
  // @@protoc_insertion_point(field_release:ChatRoomMemberData.field_4)
  return _impl_.field_4_.Release();
}
inline void ChatRoomMemberData::set_allocated_field_4(std::string* field_4) {
  if (field_4 != nullptr) {
    
  } else {
    
  }
  _impl_.field_4_.SetAllocated(field_4, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.field_4_.IsDefault()) {
    _impl_.field_4_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ChatRoomMemberData.field_4)
}

// int32 field_5 = 5;
inline void ChatRoomMemberData::clear_field_5() {
  _impl_.field_5_ = 0;
}
inline int32_t ChatRoomMemberData::_internal_field_5() const {
  return _impl_.field_5_;
}
inline int32_t ChatRoomMemberData::field_5() const {
  // @@protoc_insertion_point(field_get:ChatRoomMemberData.field_5)
  return _internal_field_5();
}
inline void ChatRoomMemberData::_internal_set_field_5(int32_t value) {
  
  _impl_.field_5_ = value;
}
inline void ChatRoomMemberData::set_field_5(int32_t value) {
  _internal_set_field_5(value);
  // @@protoc_insertion_point(field_set:ChatRoomMemberData.field_5)
}

// int32 field_7 = 7;
inline void ChatRoomMemberData::clear_field_7() {
  _impl_.field_7_ = 0;
}
inline int32_t ChatRoomMemberData::_internal_field_7() const {
  return _impl_.field_7_;
}
inline int32_t ChatRoomMemberData::field_7() const {
  // @@protoc_insertion_point(field_get:ChatRoomMemberData.field_7)
  return _internal_field_7();
}
inline void ChatRoomMemberData::_internal_set_field_7(int32_t value) {
  
  _impl_.field_7_ = value;
}
inline void ChatRoomMemberData::set_field_7(int32_t value) {
  _internal_set_field_7(value);
  // @@protoc_insertion_point(field_set:ChatRoomMemberData.field_7)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ChatRoomMemberData_2eproto
